/* ============================================================================
   @UTILITIES -> LIST
   ========================================================================= */


/**
 * Standard list styles for unordered and ordered lists as they're removed in
 * Core -> Reset.
 *
 * N.B. this utility is dependant on the following utility:
 *
 * - Spacing.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/xFHfk#list
 */


/**
 * Settings.
 */

/**
 * Apply at breakpoints.
 */

// Which breakpoints do you want to use?
$u-list-breakpoints:                      $default-breakpoints !default;

// What do you want to apply it too?
$u-list-breakpoint-toggle-default:        false !default;

$u-list-breakpoint-toggle-unordered:      false !default;

$u-list-breakpoint-toggle-ordered:        false !default;

$u-list-breakpoint-toggle-nested:         false !default;

// Indent
$u-list-indent:                           $spacing-base !default;

// Bullets
$u-list-bullet-unordered-base:            disc !default;

$u-list-bullet-unordered-nested-once:     circle !default;

$u-list-bullet-unordered-nested-twice:    square !default;

$u-list-bullet-ordered:                   decimal !default;


/**
 * Whitespace.
 */

%u-list,
.u-list {
  // Default bottom spacing
  @extend %u-s-mb-base;

  // Left indent including nested lists
  &,
  ul,
  ol {@include to-rem(margin-left, $u-list-indent);}
}

@if $u-list-breakpoint-toggle-default {
  @include generate-at-breakpoints('.u-list', $u-list-breakpoints) {
    @include to-rem(margin-bottom, $u-list-indent);

    &,
    ul,
    ol {@include to-rem(margin-left, $u-list-indent);}
  }
}// end if


/**
 * Bullets.
 *
 * For unordered lists we're replicating the native browser bullets:
 * - disc
 *  -- circle
 *    --- square
 */

// Unordered lists
%ul.u-list,
ul.u-list {list-style-type: $u-list-bullet-unordered-base;}

@if $u-list-breakpoint-toggle-unordered {
  @include generate-at-breakpoints('ul.u-list', $u-list-breakpoints) {
    list-style-type: $u-list-bullet-unordered-base;
  }
}// end if

// Ordered lists
%ol.u-list,
ol.u-list {list-style-type: $u-list-bullet-ordered;}

@if $u-list-breakpoint-toggle-ordered {
  @include generate-at-breakpoints('ol.u-list', $u-list-breakpoints) {
    list-style-type: $u-list-bullet-ordered;
  }
}// end if

  // Nested lists
  %ul.u-list,
  ul.u-list,
  %ol.u-list,
  ol.u-list {

    // Unordered lists
    ul {
      list-style-type: $u-list-bullet-unordered-nested-once;

      ul {list-style-type: $u-list-bullet-unordered-nested-twice;}
    }

    // Ordered lists
    ol {list-style-type: $u-list-bullet-ordered;}
  }

  // Nested lists
  @each $u-list-type in (ul ol) {
    @if $u-list-breakpoint-toggle-nested {
      @include generate-at-breakpoints("#{$u-list-type}.u-list{bp}",
        $u-list-breakpoints) {

        // Unordered lists
        ul {
          list-style-type: $u-list-bullet-unordered-nested-once;

          ul {list-style-type: $u-list-bullet-unordered-nested-twice;}
        }

        // Ordered lists
        ol {list-style-type: $u-list-bullet-ordered;}
      }
    }// end if
  }