/* ============================================================================
   @LAYOUT -> FLEX GRID
   ========================================================================= */

/**
 * A powerful Flexbox-based grid that is responsive ready (all
 * grid column widths are fluid using the `%` unit), nestable, and comes with
 * a bunch of handy modifiers. This makes the grid the workhorse of your UI
 * builds, any layout you need always look to the grid firstâ€”including within
 * your "Components", it exists so you don't have to write redundant CSS to
 * construct layouts.
 *
 * As nicely put by Harry Roberts:
 *
 * "Grid systems grid should be thought of as shelves. They contain content but
 * are not content in themselves. You put up your shelves then fill them with
 * your stuff. By setting up our grids separately to our components you can
 * move components around a lot more easily than if they had dimensions
 * applied to them; this makes our front-ends a lot more adaptable and quick
 * to work with."
 *
 * N.B. they're are a number of Flexbox bugs captured here:
 * https://github.com/philipwalton/flexbugs.
 */


/**
 * Settings.
 */

$l-flex-grid-gutter-base:                       $spacing-base !default;

$l-flex-grid-gutter-small:                      $spacing-half !default;

$l-flex-grid-apply-at-breakpoints-for-default:  false !default;

$l-flex-grid-apply-at-breakpoints:              $default-breakpoints !default;


/**
 * Grid container.
 *
 * 1. Negative left margin to negate the horizontal gutters.
 */

.l-flex-grid {
  display: flex;
  flex-flow: row wrap;
  margin-left: -(to-rem($l-flex-grid-gutter-base)); // [1]

  html:not(.flexboxtweener).no-flexbox & {
    display: block;
  }
}


/**
 * Grid items.
 *
 * 1. Allows the use of widths.
 * 2. Horizontal gutter.
 */

.l-flex-grid__item {
  flex-basis: auto; // [1]
  padding-left: to-rem($l-flex-grid-gutter-base); // [2]

  html:not(.flexboxtweener).no-flexbox & {
    display: inline-block;
    vertical-align: top;
  }
}


/**
 * Modifiers: gutter sizes.
 */

// Small
.l-flex-grid--gutter-horizontal-small {
  margin-left: -(to-rem($l-flex-grid-gutter-small));

  > .l-flex-grid__item {
    padding-left:  to-rem($l-flex-grid-gutter-small);
  }
}


/**
 * Modifiers: vertical gutters.
 */

// Base
.l-flex-grid--gutter-vertical-base > .l-flex-grid__item {
  margin-bottom: to-rem($spacing-base);
}


/**
 * Modifier: Equal height columns
 */

.l-flex-grid--equal-height > .l-flex-grid__item {
  display: flex;
}

@if $l-flex-grid-apply-at-breakpoints-for-default {
  @include generate-at-breakpoints('.l-flex-grid--equal-height{bp} > .l-flex-grid__item',
  $l-flex-grid-apply-at-breakpoints) {
    display: flex;
  }
}
