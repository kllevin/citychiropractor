/* ============================================================================
   @UTILITIES -> SPACING
   ========================================================================= */


/**
 * A powerful utility to apply and remove spacing (whitespace) via `margin`
 * and `padding`. All spacing uses the spacing settings from Core -> Settings
 * -> Spacing.
 *
 * N.B. This is one of the rare occasions where the class/placeholder is
 * shortened.
 *
 * Naming convention:
 *
 * [1 | 2 | 3 | 4 | 5 | 6 | 7]
 *
 * 1. Scally type:              utility [u]
 * 2. Utility name:             spacing [s]
 * 3. Spacing type/direction:   margin [m] / padding [p] | top [t] / right [r]
 *                              / bottom [b] / left [l] / sides [s] / ends [e]
 * 5. Spacing negative:         negative [n]
 * 6. Spacing remove:           this is explicit
 * 7. Spacing amount:           this is explicit
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/xFHfk#spacing
 *
 * @credit
 * https://github.com/stubbornella/oocss/blob/master/oocss/src/components/whitespace/_whitespace.scss
 */




/**
 * Settings.
 */

/**
 * Apply at breakpoints.
 */

// Which breakpoints do you want to use?
$u-spacing-breakpoints:             $default-breakpoints !default;

// What do you want to apply it too?
$u-spacing-classes-for-breakpoints: () !default;

// Spacing sizes
$u-spacing-base:                    $spacing-base !default;

$u-spacing-micro:                   $spacing-micro !default;

$u-spacing-tiny:                    $spacing-third !default;

$u-spacing-small:                   $spacing-half !default;

$u-spacing-large:                   $spacing-base-plus-half !default;

$u-spacing-huge:                    $spacing-double !default;

// Maps for the generate at breakpoint mixin

// Spacing size map
$u-spacing-sizes: (
  base:  $u-spacing-base,
  micro: $u-spacing-micro,
  tiny:  $u-spacing-tiny,
  small: $u-spacing-small,
  large: $u-spacing-large,
  huge:  $u-spacing-huge
);

// Spacing type map (abbreviation + css property)
$u-spacing-types: (

  // All
  m:      margin,
  m-n:    margin,
  p:      padding,
  p-n:    padding,

  // Top
  mt:     margin-top,
  mt-n:   margin-top,
  pt:     padding-top,
  pt-n:   padding-top,

  // Right
  mr:     margin-right,
  mr-n:   margin-right,
  pr:     padding-right,
  pr-n:   padding-right,

  // Bottom
  mb:     margin-bottom,
  mb-n:   margin-bottom,
  pb:     padding-bottom,
  pb-n:   padding-bottom,

  // Left
  ml:     margin-left,
  ml-n:   margin-left,
  pl:     padding-left,
  pl-n:   padding-left,

  // Sides
  ms:     (margin-left, margin-right),
  ms-n:   (margin-left, margin-right),
  ps:     (padding-left, padding-right),
  ps-n:   (padding-left, padding-right),

  // Ends
  me:     (margin-top, margin-bottom),
  me-n:   (margin-top, margin-bottom),
  pe:     (padding-top, padding-bottom),
  pe-n:   (padding-top, padding-bottom),

  // None
  m-none:  margin,
  p-none:  padding,
  mt-none: margin-top,
  pt-none: padding-top,
  mr-none: margin-right,
  pr-none: padding-right,
  mb-none: margin-bottom,
  pb-none: padding-bottom,
  ml-none: margin-left,
  pl-none: padding-left,
  ms-none: (margin-left, margin-right),
  ps-none: (padding-left, padding-right),
  me-none: (margin-top, margin-bottom),
  pe-none: (padding-top, padding-bottom)
);




/**
 * Base.
 */

// All
%u-s-m-base,
.u-s-m-base {@include to-rem(margin, $u-spacing-base);}

%u-s-p-base,
.u-s-p-base {@include to-rem(padding, $u-spacing-base);}

// Negative
%u-s-m-n-base,
.u-s-m-n-base {@include to-rem(margin, -$u-spacing-base);}

%u-s-p-n-base,
.u-s-p-n-base {@include to-rem(padding, -$u-spacing-base);}


// Top
%u-s-mt-base,
.u-s-mt-base {@include to-rem(margin-top, $u-spacing-base);}

%u-s-pt-base,
.u-s-pt-base {@include to-rem(padding-top, $u-spacing-base);}

// Negative
%u-s-mt-n-base,
.u-s-mt-n-base {@include to-rem(margin-top, -$u-spacing-base);}

%u-s-pt-n-base,
.u-s-pt-n-base {@include to-rem(padding-top, -$u-spacing-base);}


// Right
%u-s-mr-base,
.u-s-mr-base {@include to-rem(margin-right, $u-spacing-base);}

%u-s-pr-base,
.u-s-pr-base {@include to-rem(padding-right, $u-spacing-base);}

// Negative
%u-s-mr-n-base,
.u-s-mr-n-base {@include to-rem(margin-right, -$u-spacing-base);}

%u-s-pr-n-base,
.u-s-pr-n-base {@include to-rem(padding-right, -$u-spacing-base);}


// Bottom
%u-s-mb-base,
.u-s-mb-base {@include to-rem(margin-bottom, $u-spacing-base);}

%u-s-pb-base,
.u-s-pb-base {@include to-rem(padding-bottom, $u-spacing-base);}

// Negative
%u-s-mb-n-base,
.u-s-mb-n-base {@include to-rem(margin-bottom, -$u-spacing-base);}

%u-s-pb-n-base,
.u-s-pb-n-base {@include to-rem(padding-bottom, -$u-spacing-base);}


// Left
%u-s-ml-base,
.u-s-ml-base {@include to-rem(margin-left, $u-spacing-base);}

%u-s-pl-base,
.u-s-pl-base {@include to-rem(padding-left, $u-spacing-base);}

// Negative
%u-s-ml-n-base,
.u-s-ml-n-base {@include to-rem(margin-left, -$u-spacing-base);}

%u-s-pl-n-base,
.u-s-pl-n-base {@include to-rem(padding-left, -$u-spacing-base);}


// Sides
%u-s-ms-base,
.u-s-ms-base {@include to-rem(margin-left margin-right, $u-spacing-base);}

%u-s-ps-base,
.u-s-ps-base {@include to-rem(padding-left padding-right, $u-spacing-base);}

// Negative
%u-s-ms-n-base,
.u-s-ms-n-base {@include to-rem(margin-left margin-right, -$u-spacing-base);}

%u-s-ps-n-base,
.u-s-ps-n-base {@include to-rem(padding-left padding-right, -$u-spacing-base);}


// Ends
%u-s-me-base,
.u-s-me-base {@include to-rem(margin-top margin-bottom, $u-spacing-base);}

%u-s-pe-base,
.u-s-pe-base {@include to-rem(padding-top padding-bottom, $u-spacing-base);}

// Negative
%u-s-me-n-base,
.u-s-me-n-base {@include to-rem(margin-top margin-bottom, -$u-spacing-base);}

%u-s-pe-n-base,
.u-s-pe-n-base {@include to-rem(padding-top padding-bottom, -$u-spacing-base);}




/**
 * Micro.
 */

// All
%u-s-m-micro,
.u-s-m-micro {@include to-rem(margin, $u-spacing-micro);}

%u-s-p-micro,
.u-s-p-micro {@include to-rem(padding, $u-spacing-micro);}

// Negative
%u-s-m-n-micro,
.u-s-m-n-micro {@include to-rem(margin, -$u-spacing-micro);}

%u-s-p-n-micro,
.u-s-p-n-micro {@include to-rem(padding, -$u-spacing-micro);}


// Top
%u-s-mt-micro,
.u-s-mt-micro {@include to-rem(margin-top, $u-spacing-micro);}

%u-s-pt-micro,
.u-s-pt-micro {@include to-rem(padding-top, $u-spacing-micro);}

// Negative
%u-s-mt-n-micro,
.u-s-mt-n-micro {@include to-rem(margin-top, -$u-spacing-micro);}

%u-s-pt-n-micro,
.u-s-pt-n-micro {@include to-rem(padding-top, -$u-spacing-micro);}


// Right
%u-s-mr-micro,
.u-s-mr-micro {@include to-rem(margin-right, $u-spacing-micro);}

%u-s-pr-micro,
.u-s-pr-micro {@include to-rem(padding-right, $u-spacing-micro);}

// Negative
%u-s-mr-n-micro,
.u-s-mr-n-micro {@include to-rem(margin-right, -$u-spacing-micro);}

%u-s-pr-n-micro,
.u-s-pr-n-micro {@include to-rem(padding-right, -$u-spacing-micro);}


// Bottom
%u-s-mb-micro,
.u-s-mb-micro {@include to-rem(margin-bottom, $u-spacing-micro);}

%u-s-pb-micro,
.u-s-pb-micro {@include to-rem(padding-bottom, $u-spacing-micro);}

// Negative
%u-s-mb-n-micro,
.u-s-mb-n-micro {@include to-rem(margin-bottom, -$u-spacing-micro);}

%u-s-pb-n-micro,
.u-s-pb-n-micro {@include to-rem(padding-bottom, -$u-spacing-micro);}


// Left
%u-s-ml-micro,
.u-s-ml-micro {@include to-rem(margin-left, $u-spacing-micro);}

%u-s-pl-micro,
.u-s-pl-micro {@include to-rem(padding-left, $u-spacing-micro);}

// Negative
%u-s-ml-n-micro,
.u-s-ml-n-micro {@include to-rem(margin-left, -$u-spacing-micro);}

%u-s-pl-n-micro,
.u-s-pl-n-micro {@include to-rem(padding-left, -$u-spacing-micro);}


// Sides
%u-s-ms-micro,
.u-s-ms-micro {@include to-rem(margin-left margin-right, $u-spacing-micro);}

%u-s-ps-micro,
.u-s-ps-micro {@include to-rem(padding-left padding-right, $u-spacing-micro);}

// Negative
%u-s-ms-n-micro,
.u-s-ms-n-micro {@include to-rem(margin-left margin-right, -$u-spacing-micro);}

%u-s-ps-n-micro,
.u-s-ps-n-micro {@include to-rem(padding-left padding-right,
  -$u-spacing-micro);}


// Ends
%u-s-me-micro,
.u-s-me-micro {@include to-rem(margin-top margin-bottom, $u-spacing-micro);}

%u-s-pe-micro,
.u-s-pe-micro {@include to-rem(padding-top padding-bottom, $u-spacing-micro);}

// Negative
%u-s-me-n-micro,
.u-s-me-n-micro {@include to-rem(margin-top margin-bottom, -$u-spacing-micro);}

%u-s-pe-n-micro,
.u-s-pe-n-micro {@include to-rem(padding-top padding-bottom,
  -$u-spacing-micro);}




/**
 * Tiny.
 */

// All
%u-s-m-tiny,
.u-s-m-tiny {@include to-rem(margin, $u-spacing-tiny);}

%u-s-p-tiny,
.u-s-p-tiny {@include to-rem(padding, $u-spacing-tiny);}

// Negative
%u-s-m-n-tiny,
.u-s-m-n-tiny {@include to-rem(margin, -$u-spacing-tiny);}

%u-s-p-n-tiny,
.u-s-p-n-tiny {@include to-rem(padding, -$u-spacing-tiny);}


// Top
%u-s-mt-tiny,
.u-s-mt-tiny {@include to-rem(margin-top, $u-spacing-tiny);}

%u-s-pt-tiny,
.u-s-pt-tiny {@include to-rem(padding-top, $u-spacing-tiny);}

// Negative
%u-s-mt-n-tiny,
.u-s-mt-n-tiny {@include to-rem(margin-top, -$u-spacing-tiny);}

%u-s-pt-n-tiny,
.u-s-pt-n-tiny {@include to-rem(padding-top, -$u-spacing-tiny);}


// Right
%u-s-mr-tiny,
.u-s-mr-tiny {@include to-rem(margin-right, $u-spacing-tiny);}

%u-s-pr-tiny,
.u-s-pr-tiny {@include to-rem(padding-right, $u-spacing-tiny);}

// Negative
%u-s-mr-n-tiny,
.u-s-mr-n-tiny {@include to-rem(margin-right, -$u-spacing-tiny);}

%u-s-pr-n-tiny,
.u-s-pr-n-tiny {@include to-rem(padding-right, -$u-spacing-tiny);}


// Bottom
%u-s-mb-tiny,
.u-s-mb-tiny {@include to-rem(margin-bottom, $u-spacing-tiny);}

%u-s-pb-tiny,
.u-s-pb-tiny {@include to-rem(padding-bottom, $u-spacing-tiny);}

// Negative
%u-s-mb-n-tiny,
.u-s-mb-n-tiny {@include to-rem(margin-bottom, -$u-spacing-tiny);}

%u-s-pb-n-tiny,
.u-s-pb-n-tiny {@include to-rem(padding-bottom, -$u-spacing-tiny);}


// Left
%u-s-ml-tiny,
.u-s-ml-tiny {@include to-rem(margin-left, $u-spacing-tiny);}

%u-s-pl-tiny,
.u-s-pl-tiny {@include to-rem(padding-left, $u-spacing-tiny);}

// Negative
%u-s-ml-n-tiny,
.u-s-ml-n-tiny {@include to-rem(margin-left, -$u-spacing-tiny);}

%u-s-pl-n-tiny,
.u-s-pl-n-tiny {@include to-rem(padding-left, -$u-spacing-tiny);}


// Sides
%u-s-ms-tiny,
.u-s-ms-tiny {@include to-rem(margin-left margin-right, $u-spacing-tiny);}

%u-s-ps-tiny,
.u-s-ps-tiny {@include to-rem(padding-left padding-right, $u-spacing-tiny);}

// Negative
%u-s-ms-n-tiny,
.u-s-ms-n-tiny {@include to-rem(margin-left margin-right, -$u-spacing-tiny);}

%u-s-ps-n-tiny,
.u-s-ps-n-tiny {@include to-rem(padding-left padding-right, -$u-spacing-tiny);}


// Ends
%u-s-me-tiny,
.u-s-me-tiny {@include to-rem(margin-top margin-bottom, $u-spacing-tiny);}

%u-s-pe-tiny,
.u-s-pe-tiny {@include to-rem(padding-top padding-bottom, $u-spacing-tiny);}

// Negative
%u-s-me-n-tiny,
.u-s-me-n-tiny {@include to-rem(margin-top margin-bottom, -$u-spacing-tiny);}

%u-s-pe-n-tiny,
.u-s-pe-n-tiny {@include to-rem(padding-top padding-bottom, -$u-spacing-tiny);}




/**
 * Small.
 */

// All
%u-s-m-small,
.u-s-m-small {@include to-rem(margin, $u-spacing-small);}

%u-s-p-small,
.u-s-p-small {@include to-rem(padding, $u-spacing-small);}

// Negative
%u-s-m-n-small,
.u-s-m-n-small {@include to-rem(margin, -$u-spacing-small);}

%u-s-p-n-small,
.u-s-p-n-small {@include to-rem(padding, -$u-spacing-small);}


// Top
%u-s-mt-small,
.u-s-mt-small {@include to-rem(margin-top, $u-spacing-small);}

%u-s-pt-small,
.u-s-pt-small {@include to-rem(padding-top, $u-spacing-small);}

// Negative
%u-s-mt-n-small,
.u-s-mt-n-small {@include to-rem(margin-top, -$u-spacing-small);}

%u-s-pt-n-small,
.u-s-pt-n-small {@include to-rem(padding-top, -$u-spacing-small);}


// Right
%u-s-mr-small,
.u-s-mr-small {@include to-rem(margin-right, $u-spacing-small);}

%u-s-pr-small,
.u-s-pr-small {@include to-rem(padding-right, $u-spacing-small);}

// Negative
%u-s-mr-n-small,
.u-s-mr-n-small {@include to-rem(margin-right, -$u-spacing-small);}

%u-s-pr-n-small,
.u-s-pr-n-small {@include to-rem(padding-right, -$u-spacing-small);}


// Bottom
%u-s-mb-small,
.u-s-mb-small {@include to-rem(margin-bottom, $u-spacing-small);}

%u-s-pb-small,
.u-s-pb-small {@include to-rem(padding-bottom, $u-spacing-small);}

// Negative
%u-s-mb-n-small,
.u-s-mb-n-small {@include to-rem(margin-bottom, -$u-spacing-small);}

%u-s-pb-n-small,
.u-s-pb-n-small {@include to-rem(padding-bottom, -$u-spacing-small);}


// Left
%u-s-ml-small,
.u-s-ml-small {@include to-rem(margin-left, $u-spacing-small);}

%u-s-pl-small,
.u-s-pl-small {@include to-rem(padding-left, $u-spacing-small);}

// Negative
%u-s-ml-n-small,
.u-s-ml-n-small {@include to-rem(margin-left, -$u-spacing-small);}

%u-s-pl-n-small,
.u-s-pl-n-small {@include to-rem(padding-left, -$u-spacing-small);}


// Sides
%u-s-ms-small,
.u-s-ms-small {@include to-rem(margin-left margin-right, $u-spacing-small);}

%u-s-ps-small,
.u-s-ps-small {@include to-rem(padding-left padding-right, $u-spacing-small);}

// Negative
%u-s-ms-n-small,
.u-s-ms-n-small {@include to-rem(margin-left margin-right, -$u-spacing-small);}

%u-s-ps-n-small,
.u-s-ps-n-small {@include to-rem(padding-left padding-right,
  -$u-spacing-small);}


// Ends
%u-s-me-small,
.u-s-me-small {@include to-rem(margin-top margin-bottom, $u-spacing-small);}

%u-s-pe-small,
.u-s-pe-small {@include to-rem(padding-top padding-bottom, $u-spacing-small);}

// Negative
%u-s-me-n-small,
.u-s-me-n-small {@include to-rem(margin-top margin-bottom, -$u-spacing-small);}

%u-s-pe-n-small,
.u-s-pe-n-small {@include to-rem(padding-top padding-bottom,
  -$u-spacing-small);}




/**
 * Large.
 */

// All
%u-s-m-large,
.u-s-m-large {@include to-rem(margin, $u-spacing-large);}

%u-s-p-large,
.u-s-p-large {@include to-rem(padding, $u-spacing-large);}

// Negative
%u-s-m-n-large,
.u-s-m-n-large {@include to-rem(margin, -$u-spacing-large);}

%u-s-p-n-large,
.u-s-p-n-large {@include to-rem(padding, -$u-spacing-large);}


// Top
%u-s-mt-large,
.u-s-mt-large {@include to-rem(margin-top, $u-spacing-large);}

%u-s-pt-large,
.u-s-pt-large {@include to-rem(padding-top, $u-spacing-large);}

// Negative
%u-s-mt-n-large,
.u-s-mt-n-large {@include to-rem(margin-top, -$u-spacing-large);}

%u-s-pt-n-large,
.u-s-pt-n-large {@include to-rem(padding-top, -$u-spacing-large);}


// Right
%u-s-mr-large,
.u-s-mr-large {@include to-rem(margin-right, $u-spacing-large);}

%u-s-pr-large,
.u-s-pr-large {@include to-rem(padding-right, $u-spacing-large);}

// Negative
%u-s-mr-n-large,
.u-s-mr-n-large {@include to-rem(margin-right, -$u-spacing-large);}

%u-s-pr-n-large,
.u-s-pr-n-large {@include to-rem(padding-right, -$u-spacing-large);}


// Bottom
%u-s-mb-large,
.u-s-mb-large {@include to-rem(margin-bottom, $u-spacing-large);}

%u-s-pb-large,
.u-s-pb-large {@include to-rem(padding-bottom, $u-spacing-large);}

// Negative
%u-s-mb-n-large,
.u-s-mb-n-large {@include to-rem(margin-bottom, -$u-spacing-large);}

%u-s-pb-n-large,
.u-s-pb-n-large {@include to-rem(padding-bottom, -$u-spacing-large);}


// Left
%u-s-ml-large,
.u-s-ml-large {@include to-rem(margin-left, $u-spacing-large);}

%u-s-pl-large,
.u-s-pl-large {@include to-rem(padding-left, $u-spacing-large);}

// Negative
%u-s-ml-n-large,
.u-s-ml-n-large {@include to-rem(margin-left, -$u-spacing-large);}

%u-s-pl-n-large,
.u-s-pl-n-large {@include to-rem(padding-left, -$u-spacing-large);}


// Sides
%u-s-ms-large,
.u-s-ms-large {@include to-rem(margin-left margin-right, $u-spacing-large);}

%u-s-ps-large,
.u-s-ps-large {@include to-rem(padding-left padding-right, $u-spacing-large);}

// Negative
%u-s-ms-n-large,
.u-s-ms-n-large {@include to-rem(margin-left margin-right, -$u-spacing-large);}

%u-s-ps-n-large,
.u-s-ps-n-large {@include to-rem(padding-left padding-right,
  -$u-spacing-large);}


// Ends
%u-s-me-large,
.u-s-me-large {@include to-rem(margin-top margin-bottom, $u-spacing-large);}

%u-s-pe-large,
.u-s-pe-large {@include to-rem(padding-top padding-bottom, $u-spacing-large);}

// Negative
%u-s-me-n-large,
.u-s-me-n-large {@include to-rem(margin-top margin-bottom, -$u-spacing-large);}

%u-s-pe-n-large,
.u-s-pe-n-large {@include to-rem(padding-top padding-bottom,
  -$u-spacing-large);}




/**
 * Huge.
 */

// All
%u-s-m-huge,
.u-s-m-huge {@include to-rem(margin, $u-spacing-huge);}

%u-s-p-huge,
.u-s-p-huge {@include to-rem(padding, $u-spacing-huge);}

// Negative
%u-s-m-n-huge,
.u-s-m-n-huge {@include to-rem(margin, -$u-spacing-huge);}

%u-s-p-n-huge,
.u-s-p-n-huge {@include to-rem(padding, -$u-spacing-huge);}


// Top
%u-s-mt-huge,
.u-s-mt-huge {@include to-rem(margin-top, $u-spacing-huge);}

%u-s-pt-huge,
.u-s-pt-huge {@include to-rem(padding-top, $u-spacing-huge);}

// Negative
%u-s-mt-n-huge,
.u-s-mt-n-huge {@include to-rem(margin-top, -$u-spacing-huge);}

%u-s-pt-n-huge,
.u-s-pt-n-huge {@include to-rem(padding-top, -$u-spacing-huge);}


// Right
%u-s-mr-huge,
.u-s-mr-huge {@include to-rem(margin-right, $u-spacing-huge);}

%u-s-pr-huge,
.u-s-pr-huge {@include to-rem(padding-right, $u-spacing-huge);}

// Negative
%u-s-mr-n-huge,
.u-s-mr-n-huge {@include to-rem(margin-right, -$u-spacing-huge);}

%u-s-pr-n-huge,
.u-s-pr-n-huge {@include to-rem(padding-right, -$u-spacing-huge);}


// Bottom
%u-s-mb-huge,
.u-s-mb-huge {@include to-rem(margin-bottom, $u-spacing-huge);}

%u-s-pb-huge,
.u-s-pb-huge {@include to-rem(padding-bottom, $u-spacing-huge);}

// Negative
%u-s-mb-n-huge,
.u-s-mb-n-huge {@include to-rem(margin-bottom, -$u-spacing-huge);}

%u-s-pb-n-huge,
.u-s-pb-n-huge {@include to-rem(padding-bottom, -$u-spacing-huge);}


// Left
%u-s-ml-huge,
.u-s-ml-huge {@include to-rem(margin-left, $u-spacing-huge);}

%u-s-pl-huge,
.u-s-pl-huge {@include to-rem(padding-left, $u-spacing-huge);}

// Negative
%u-s-ml-n-huge,
.u-s-ml-n-huge {@include to-rem(margin-left, -$u-spacing-huge);}

%u-s-pl-n-huge,
.u-s-pl-n-huge {@include to-rem(padding-left, -$u-spacing-huge);}


// Sides
%u-s-ms-huge,
.u-s-ms-huge {@include to-rem(margin-left margin-right, $u-spacing-huge);}

%u-s-ps-huge,
.u-s-ps-huge {@include to-rem(padding-left padding-right, $u-spacing-huge);}

// Negative
%u-s-ms-n-huge,
.u-s-ms-n-huge {@include to-rem(margin-left margin-right, -$u-spacing-huge);}

%u-s-ps-n-huge,
.u-s-ps-n-huge {@include to-rem(padding-left padding-right, -$u-spacing-huge);}


// Ends
%u-s-me-huge,
.u-s-me-huge {@include to-rem(margin-top margin-bottom, $u-spacing-huge);}

%u-s-pe-huge,
.u-s-pe-huge {@include to-rem(padding-top padding-bottom, $u-spacing-huge);}

// Negative
%u-s-me-n-huge,
.u-s-me-n-huge {@include to-rem(margin-top margin-bottom, -$u-spacing-huge);}

%u-s-pe-n-huge,
.u-s-pe-n-huge {@include to-rem(padding-top padding-bottom, -$u-spacing-huge);}




/**
 * None.
 */


// All
%u-s-m-none,
.u-s-m-none {margin: 0;}

%u-s-p-none,
.u-s-p-none {padding: 0;}


// Top
%u-s-mt-none,
.u-s-mt-none {margin-top: 0;}

%u-s-pt-none,
.u-s-pt-none {padding-top: 0;}


// Right
%u-s-mr-none,
.u-s-mr-none {margin-right: 0;}

%u-s-pr-none,
.u-s-pr-none {padding-right: 0;}


// Bottom
%u-s-mb-none,
.u-s-mb-none {margin-bottom: 0;}

%u-s-pb-none,
.u-s-pb-none {padding-bottom: 0;}


// Left
%u-s-ml-none,
.u-s-ml-none {margin-left: 0;}

%u-s-pl-none,
.u-s-pl-none {padding-left: 0;}


// Sides
%u-s-ms-none,
.u-s-ms-none {
  margin-left: 0;
  margin-right: 0;
}

%u-s-ps-none,
.u-s-ps-none {
  padding-left: 0;
  padding-right: 0;
}


// Ends
%u-s-me-none,
.u-s-me-none {
  margin-top: 0;
  margin-bottom: 0;
}

%u-s-pe-none,
.u-s-pe-none {
  padding-top: 0;
  padding-bottom: 0;
}




/**
 * Generates all breakpoint classes.
 */

@each $abbreviation, $type in $u-spacing-types {

  // No spacing classes
  @if str_index($abbreviation, "-none") != null {
    $class-name: ".u-s-#{$abbreviation}";
    @if index($u-spacing-classes-for-breakpoints, $class-name) {
      @include generate-at-breakpoints($class-name ,
        $u-spacing-breakpoints) {
        @include to-rem($type, 0);
      }
    }
  }

  // Everything else
  @else {

    // Loop through the sizes
    @each $size in (base tiny small large huge) {
      $class-name: ".u-s-#{$abbreviation}-#{$size}";
      @if index($u-spacing-classes-for-breakpoints, $class-name) != null {
        @include generate-at-breakpoints($class-name,
          $u-spacing-breakpoints) {

          // Get all the sizes
          $size-value: map-get($u-spacing-sizes, $size);

          // Negative spacing
          @if str_index($abbreviation, "-n") != null {
            $size-value: $size-value * -1;
          }

          // All other spacing
          @include to-rem($type, $size-value);
        }
      }
    }
  }
}