/* ============================================================================
   @UTILITIES -> LIST INLINE
   ========================================================================= */


/**
 * Make list items for `ul` and `ol` elements render in one line which can be
 * extended with a number of modifiers.
 *
 * N.B. This utility requires that you remove the whitespace between `li`s
 * especially with the Spacing modifiers. One way to remove whitespace is by
 * inserting HTML comments between the opening and closing `li`s e.g.
 *
   <ul class="u-list-inline">
     <li>Lorem</li><!--
     --><li>Aliquam</li><!--
     --><li>Vestibulum</li>
   </ul>
 *
 * Or you can omit the closing `li` which we don't recommend :)
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/xFHfk#list-inline
 */


/**
 * Settings.
 */

/**
 * Apply at breakpoints.
 */

// Which breakpoints do you want to use?
$u-list-inline-breakpoints: $default-breakpoints !default;

// What do you want to apply it too?
$u-list-inline-breakpoint-toggle-default:                       false !default;

$u-list-inline-breakpoint-toggle-spacing-base:                  false !default;

$u-list-inline-breakpoint-toggle-spacing-base-both:             false !default;

$u-list-inline-breakpoint-toggle-spacing-tiny:                  false !default;

$u-list-inline-breakpoint-toggle-spacing-tiny-both:             false !default;

$u-list-inline-breakpoint-toggle-spacing-small:                 false !default;

$u-list-inline-breakpoint-toggle-spacing-small-both:            false !default;

$u-list-inline-breakpoint-toggle-spacing-large:                 false !default;

$u-list-inline-breakpoint-toggle-spacing-large-both:            false !default;

$u-list-inline-breakpoint-toggle-spacing-huge:                  false !default;

$u-list-inline-breakpoint-toggle-spacing-huge-both:             false !default;

$u-list-inline-breakpoint-toggle-divider:                       false !default;

$u-list-inline-breakpoint-toggle-fit-flexbox:                   false !default;

$u-list-inline-breakpoint-toggle-fit-table:                     false !default;

$u-list-inline-breakpoint-toggle-delimited-slash:               false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing:       false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing-base:  false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing-tiny:  false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing-small: false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing-large: false !default;

$u-list-inline-breakpoint-toggle-delimited-slash-spacing-huge:  false !default;

$u-list-inline-breakpoint-toggle-delimited-comma:               false !default;

// Spacing between list items
$u-list-inline-item-spacing-base:    $spacing-base !default;

$u-list-inline-item-spacing-tiny:    $spacing-third !default;

$u-list-inline-item-spacing-small:   $spacing-half !default;

$u-list-inline-item-spacing-large:   $spacing-base-plus-half !default;

$u-list-inline-item-spacing-huge:    $spacing-double !default;

// Dividers
$u-list-inline-divider-colour:       $colour-text-base !default;

$u-list-inline-divider-thickness:    1 !default;


%u-list-inline,
.u-list-inline {
  > li {display: inline-block;}
}

@if $u-list-inline-breakpoint-toggle-default {
  @include generate-at-breakpoints('.u-list-inline{bp} > li',
  $u-list-inline-breakpoints) {display: inline-block;}
}// end if


/**
 * Modifier: spacing.
 *
 * Add spacing between the list items. The default is to apply spacing to the
 * outside of the list items via `margin-left` but there's a version where the
 * spacing can be applied to both sides via `margin-left` and `padding-left`.
 * And we offset the spacing from the first list item by using a negative
 * `margin-left` on the `ul`, this is the most optimal way of handling this as
 * there can be cases where the list items wrap onto multiple lines.
 */


/**
 * Base.
 */

// One side
%u-list-inline--spacing-base,
.u-list-inline--spacing-base {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-base);

  > li {@include to-rem(margin-left, $u-list-inline-item-spacing-base);}
}

@if $u-list-inline-breakpoint-toggle-spacing-base {
  @include generate-at-breakpoints('.u-list-inline--spacing-base',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-base);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-base{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      $u-list-inline-item-spacing-base);
  }
}// end if

// Both sides
%u-list-inline--spacing-base-both,
.u-list-inline--spacing-base-both {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-base*2);

  > li {@include to-rem(margin-left padding-left,
    $u-list-inline-item-spacing-base);}
}

@if $u-list-inline-breakpoint-toggle-spacing-base-both {
  @include generate-at-breakpoints('.u-list-inline--spacing-both',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-base*2);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-both{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left padding-left,
      $u-list-inline-item-spacing-base);
  }
}// end if


/**
 * Tiny.
 */

// One side
%u-list-inline--spacing-tiny,
.u-list-inline--spacing-tiny {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-tiny);

  > li {@include to-rem(margin-left, $u-list-inline-item-spacing-tiny);}
}

@if $u-list-inline-breakpoint-toggle-spacing-tiny {
  @include generate-at-breakpoints('.u-list-inline--spacing-tiny',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-tiny);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-tiny{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      $u-list-inline-item-spacing-tiny);
  }
}// end if

// Both sides
%u-list-inline--spacing-tiny-both,
.u-list-inline--spacing-tiny-both {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-tiny*2);

  > li {@include to-rem(margin-left padding-left,
    $u-list-inline-item-spacing-tiny);}
}

@if $u-list-inline-breakpoint-toggle-spacing-tiny-both {
  @include generate-at-breakpoints('.u-list-inline--spacing-tiny-both',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-tiny*2);}

  @include generate-at-breakpoints('.u-list-inline--spacing-tiny-both{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left padding-left,
      $u-list-inline-item-spacing-tiny);}
}// end if


/**
 * Small.
 */

// One side
%u-list-inline--spacing-small,
.u-list-inline--spacing-small {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-small);

  > li {@include to-rem(margin-left, $u-list-inline-item-spacing-small);}
}

@if $u-list-inline-breakpoint-toggle-spacing-small {
  @include generate-at-breakpoints('.u-list-inline--spacing-small',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-small);}

  @include generate-at-breakpoints('.u-list-inline--spacing-small{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      $u-list-inline-item-spacing-small);}
}// end if

// Both sides
%u-list-inline--spacing-small-both,
.u-list-inline--spacing-small-both {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-small*2);

  > li {@include to-rem(margin-left padding-left,
    $u-list-inline-item-spacing-small);}
}

@if $u-list-inline-breakpoint-toggle-spacing-small-both {
  @include generate-at-breakpoints('.u-list-inline--spacing-small-both',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-small*2);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-small-both{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left padding-left,
      $u-list-inline-item-spacing-small);
  }
}// end if


/**
 * Large.
 */

// One side
%u-list-inline--spacing-large,
.u-list-inline--spacing-large {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-large);

  > li {@include to-rem(margin-left, $u-list-inline-item-spacing-large);}
}

@if $u-list-inline-breakpoint-toggle-spacing-large {
  @include generate-at-breakpoints('.u-list-inline--spacing-large',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-large);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-large{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      $u-list-inline-item-spacing-large);
  }
}// end if

// Both sides
%u-list-inline--spacing-large-both,
.u-list-inline--spacing-large-both {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-large*2);

  > li {@include to-rem(margin-left padding-left,
    $u-list-inline-item-spacing-large);}
}

@if $u-list-inline-breakpoint-toggle-spacing-large-both {
  @include generate-at-breakpoints('.u-list-inline--spacing-large',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-large*2);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-large{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left padding-left,
      $u-list-inline-item-spacing-large);
  }
}// end if


/**
 * Huge.
 */

// One side
%u-list-inline--spacing-huge,
.u-list-inline--spacing-huge {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-huge);

  > li {@include to-rem(margin-left, $u-list-inline-item-spacing-huge);}
}

@if $u-list-inline-breakpoint-toggle-spacing-huge {
  @include generate-at-breakpoints('.u-list-inline--spacing-huge',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-huge);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-huge{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      $u-list-inline-item-spacing-huge);
  }
}// end if

// Both sides
%u-list-inline--spacing-huge-both,
.u-list-inline--spacing-huge-both {
  @include to-rem(margin-left, -$u-list-inline-item-spacing-huge*2);

  > li {@include to-rem(margin-left padding-left,
    $u-list-inline-item-spacing-huge);}
}

@if $u-list-inline-breakpoint-toggle-spacing-huge-both {
  @include generate-at-breakpoints('.u-list-inline--spacing-huge-both',
    $u-list-inline-breakpoints) {@include to-rem(margin-left,
      -$u-list-inline-item-spacing-huge*2);
  }

  @include generate-at-breakpoints('.u-list-inline--spacing-huge-both{bp} > li',
    $u-list-inline-breakpoints) {@include to-rem(margin-left padding-left,
      $u-list-inline-item-spacing-huge);
  }
}// end if


/**
 * Modifier: divider.
 *
 * Add a keyline separator between the list items.
 */

%u-list-inline--divider,
.u-list-inline--divider {
  > li + li {@include to-rem(border-left, $u-list-inline-divider-thickness
      solid $u-list-inline-divider-colour);}
}

@if $u-list-inline-breakpoint-toggle-divider {
  @include generate-at-breakpoints('.u-list-inline--divider{bp} > li + li',
    $u-list-inline-breakpoints) {@include to-rem(border-left,
      $u-list-inline-divider-thickness solid $u-list-inline-divider-colour);
  }
}// end if


/**
 * Modifier: fit.
 *
 * Force the list items to occupy 100% of the available width of its parent.
 */

// Flexbox method
// N.B. this has limited support so use with caution
%u-list-inline--fit-flexbox,
.u-list-inline--fit-flexbox {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-around;
}

@if $u-list-inline-breakpoint-toggle-fit-flexbox {
  @include generate-at-breakpoints('.u-list-inline--fit-flexbox',
    $u-list-inline-breakpoints) {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
  }
}// end if

// CSS table method
%u-list-inline--fit-table,
.u-list-inline--fit-table {
  display: table;
  width: 100%;

  > li {display: table-cell;}
}

@if $u-list-inline-breakpoint-toggle-fit-table {
  @include generate-at-breakpoints('.u-list-inline--fit-table',
    $u-list-inline-breakpoints) {
    display: table;
    width: 100%;

    > li {display: table-cell;}
  }
}// end if


/**
 * Modifier: delimited.
 *
 * List items separated by a few different separators.
 */

// Slash
%u-list-inline--delimited-slash > li + li:before,
.u-list-inline--delimited-slash > li + li:before {content: "/";}

@if $u-list-inline-breakpoint-toggle-delimited-slash {
  @include generate-at-breakpoints(".u-list-inline--delimited-slash{bp} > li + li:before",
    $u-list-inline-breakpoints) {content: "/";}
}// end if

  // When used in conjuction with the Spacing -> Base modifier

  // Make the pseudo element `inline-block` as it needs `margin-right`
  %u-list-inline--delimited-slash[class*="u-list-inline--spacing"] > li +
  li:before,
  .u-list-inline--delimited-slash[class*="u-list-inline--spacing"] > li +
  li:before {display: inline-block;}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing {
    @include generate-at-breakpoints('.u-list-inline--delimited-slash{bp}[class*="u-list-inline--spacing"] > li + li:before',
      $u-list-inline-breakpoints) {display: inline-block;}
  }// end if

  // Base
  %u-list-inline--spacing-base.u-list-inline--delimited-slash > li + li:before,
  .u-list-inline--spacing-base.u-list-inline--delimited-slash > li + li:before {
    @include to-rem(margin-right, $u-list-inline-item-spacing-base);}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing-base {
    @include generate-at-breakpoints('.u-list-inline--spacing-base.u-list-inline--delimited-slash{bp} > li + li:before',
      $u-list-inline-breakpoints) {@include to-rem(margin-right,
        $u-list-inline-item-spacing-base);}
  }// end if

  // Tiny
  %u-list-inline--spacing-tiny.u-list-inline--delimited-slash > li + li:before,
  .u-list-inline--spacing-tiny.u-list-inline--delimited-slash > li + li:before {
    @include to-rem(margin-right, $u-list-inline-item-spacing-tiny);}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing-tiny {
    @include generate-at-breakpoints('.u-list-inline--spacing-tiny.u-list-inline--delimited-slash{bp} > li + li:before',
      $u-list-inline-breakpoints) {@include to-rem(margin-right,
        $u-list-inline-item-spacing-tiny);}
  }// end if

  // Small
  %u-list-inline--spacing-small.u-list-inline--delimited-slash > li + li:before,
  .u-list-inline--spacing-small.u-list-inline--delimited-slash > li + li:before {
    @include to-rem(margin-right, $u-list-inline-item-spacing-small);}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing-small {
    @include generate-at-breakpoints('.u-list-inline--spacing-small.u-list-inline--delimited-slash{bp} > li + li:before',
      $u-list-inline-breakpoints) {@include to-rem(margin-right,
        $u-list-inline-item-spacing-small);}
  }// end if

  // Large
  %u-list-inline--spacing-large.u-list-inline--delimited-slash > li + li:before,
  .u-list-inline--spacing-large.u-list-inline--delimited-slash > li + li:before {
    @include to-rem(margin-right, $u-list-inline-item-spacing-large);}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing-large {
    @include generate-at-breakpoints('.u-list-inline--spacing-large.u-list-inline--delimited-slash{bp} > li + li:before',
      $u-list-inline-breakpoints) {@include to-rem(margin-right,
        $u-list-inline-item-spacing-large);}
  }// end if

  // Huge
  %u-list-inline--spacing-huge.u-list-inline--delimited-slash > li + li:before,
  .u-list-inline--spacing-huge.u-list-inline--delimited-slash > li + li:before {
    @include to-rem(margin-right, $u-list-inline-item-spacing-huge);}

  @if $u-list-inline-breakpoint-toggle-delimited-slash-spacing-huge {
    @include generate-at-breakpoints('.u-list-inline--spacing-huge.u-list-inline--delimited-slash{bp} > li + li:before',
      $u-list-inline-breakpoints) {@include to-rem(margin-right,
        $u-list-inline-item-spacing-huge);}
  }// end if

// Comma
%u-list-inline--delimited-comma > li + li:before,
.u-list-inline--delimited-comma > li + li:before {content: ",";}

@if $u-list-inline-breakpoint-toggle-delimited-comma {
  @include generate-at-breakpoints('.u-list-inline--delimited-comma > li + li:before',
    $u-list-inline-breakpoints) {content: ",";}
}// end if