/* ============================================================================
   @UTILITIES -> SIDE-BY-SIDE
   ========================================================================= */


/**
 * Place any two elements side-by-side, typically for an image- and text-like
 * content.
 *
 * N.B. this utility is dependant on the following utilities:
 *
 * - Clear fix.
 * - New block formatting context.
 *
 * @demo
 * http://codepen.io/team/westfieldlabs/full/xFHfk#side-by-side
 *
 * @credit
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */


/**
 * Settings.
 */

// Gutter sizes
$u-side-by-side-gutter-base:        $spacing-base !default;

$u-side-by-side-gutter-tiny:        $spacing-third !default;

$u-side-by-side-gutter-small:       $spacing-half !default;

$u-side-by-side-gutter-large:       $spacing-base-plus-half !default;

$u-side-by-side-gutter-huge:        $spacing-double !default;

// Remove i.e. stack them
$u-side-by-side-remove:             true !default;

// At what breakpoint to remove, can be one of the main breakpoints or any
// interger
// N.B. served via a `max-width` media query
$u-side-by-side-remove-when:        palm !default;


/**
 * 1. So it can work on inline elements e.g. `span`.
 */

.u-side-by-side {
  @extend %u-clear-fix;
  display: block; // [1]
}


  /**
   * Left side.
   */

  .u-side-by-side__left {
    float: left;
    @include to-rem(margin-right, $u-side-by-side-gutter-base);


    /**
     * Modifiers: gutter sizing.
     */

    // Tiny
    .u-side-by-side--gutter-tiny > & {
      @include to-rem(margin-right, $u-side-by-side-gutter-tiny);
    }

    // Small
    .u-side-by-side--gutter-small > & {
      @include to-rem(margin-right, $u-side-by-side-gutter-small);
    }

    // Large
    .u-side-by-side--gutter-large > & {
      @include to-rem(margin-right, $u-side-by-side-gutter-large);
    }

    // Huge
    .u-side-by-side--gutter-huge > & {
      @include to-rem(margin-right, $u-side-by-side-gutter-huge);
    }


    /**
     * Modifiers: reversed.
     *
     * Switch the sides i.e. left becomes right and right becomes left.
     */

    .u-side-by-side--reversed > & {
      float: right;
      margin-right: 0;
      @include to-rem(margin-left, $u-side-by-side-gutter-base);
    }

    // Reversed tiny gutter
    .u-side-by-side--reversed.u-side-by-side--gutter-tiny > & {
      @include to-rem(margin-left, $u-side-by-side-gutter-tiny);
    }

    // Reversed small gutter
    .u-side-by-side--reversed.u-side-by-side--gutter-small > & {
      @include to-rem(margin-left, $u-side-by-side-gutter-small);
    }

    // Reversed large gutter
    .u-side-by-side--reversed.u-side-by-side--gutter-large > & {
      @include to-rem(margin-left, $u-side-by-side-gutter-large);
    }

    // Reversed huge gutter
    .u-side-by-side--reversed.u-side-by-side--gutter-huge > & {
      @include to-rem(margin-left, $u-side-by-side-gutter-huge);
    }


    /**
     * Modifier: flush.
     *
     * Remove the gutter.
     */

    .u-side-by-side--flush > & {margin-right: 0;}

    // Reversed flush
    .u-side-by-side--reversed.u-side-by-side--flush > & {margin-left: 0;}


    /**
     * Modifier: remove.
     *
     * Turn off the side-by-side layout so the two elements stack on top of
     * each other at the palm breakpoint (or whatever you specify) and provide
     * bottom spacing between the two elements via the gutter size settings.
     *
     * Make optional as this uses a fair amount of CSS.
     *
     * N.B. we use a `max-width` media query for this which is something we
     * wouldn't usually do as we build Mobile First however this is simply the
     * most pragmatic way of accomplishing this. Also this utility's default
     * state is side-by-side, so its stacked state is the exception, rather
     * than the rule.
     */

    @if $u-side-by-side-remove {

      @include respond-to($u-side-by-side-remove-when, max) {

        .u-side-by-side--remove > & {
          float: none;
          margin-right: 0;
          margin-left: 0;
          @include to-rem(margin-bottom, $u-side-by-side-gutter-base);
        }


          /**
           * Modifiers: bottom spacing sizing.
           */

          // Tiny
          .u-side-by-side--remove.u-side-by-side--gutter-tiny > & {
            @include to-rem(margin-bottom, $u-side-by-side-gutter-tiny);}

          // Small
          .u-side-by-side--remove.u-side-by-side--gutter-small > & {
            @include to-rem(margin-bottom, $u-side-by-side-gutter-small);}

          // Large
          .u-side-by-side--remove.u-side-by-side--gutter-large > & {
            @include to-rem(margin-bottom, $u-side-by-side-gutter-large);}

          // Huge
          .u-side-by-side--remove.u-side-by-side--gutter-huge > & {
            @include to-rem(margin-bottom, $u-side-by-side-gutter-huge);}


          /**
           * Modifier: flush.
           *
           * Remove the bottom spacing.
           */

          .u-side-by-side--remove.u-side-by-side--flush > & {margin-bottom: 0;}

      }

    }// endif

  }


  /**
   * Right side.
   */

  .u-side-by-side__right {@extend %u-nfbc;}