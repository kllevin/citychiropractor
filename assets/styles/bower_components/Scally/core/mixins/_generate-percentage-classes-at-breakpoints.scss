/* ============================================================================
   @CORE -> MIXINS -> GENERATE PERCENTAGE CLASSES AT BREAKPOINTS
   ========================================================================= */


/**
 * Generate percentage classes with the option to apply at different
 * breakpoints e.g. `.u-one-whole` / `.u-one-whole-from-lap`. The percentage
 * classes are based off the widths defined here: Core -> Settings -> Widths.
 *
 * N.B. the application for this mixin is quite unique so it's only used in a
 * few places in the framework.
 *
 * @example
   @include generate-percentage-classes-at-breakpoints(
     $breakpoints-for-grid-push-classes,
     $scally-type: "l",
     $class-name: "push",
     $css-property: "left"
   );
 */


/**
 * Settings.
 */

// The fractions to be used for the classes
$mixin-denominator-numbers:   (1 2 3 4 5 6 8 10 12) !default;

$mixin-numerators:            (one two three four five six seven eight nine
                              ten eleven twelve) !default;

$mixin-denominator-words:     (whole half third quarter fifth sixth seventh
                              eighth ninth tenth eleventh twelfth) !default;


@mixin generate-percentage-classes-at-breakpoints($breakpoint-names,
  $scally-type: "u", $class-name: null, $css-property: "width") {

  @if $class-name {
    $class-name: "#{$class-name}-";
  }

  $all-breakpoint-names: map-keys($breakpoints);

  @if $breakpoint-names == all {
    $breakpoint-names: $all-breakpoint-names;
  }

  @include generate-percentage-classes("", $scally-type, $class-name,
    $css-property);

  @each $breakpoint in $breakpoint-names {
    $limit: if($breakpoint == "palm", "max", "min");

    @include respond-to($breakpoint, $limit) {
      @if $breakpoint {
        $suffix: if($limit == "min", "-from", "-up-to");
        $breakpoint: "#{$suffix}-#{$breakpoint}";
      }

      @include generate-percentage-classes($breakpoint, $scally-type,
        $class-name, $css-property);
    }
  }
}

@mixin generate-percentage-classes($breakpoint: "", $scally-type: "u",
  $class-name: null, $css-property: "width") {
  @each $denominator in $mixin-denominator-numbers {
    @for $numerator from 1 through max($denominator - 1, 1) {
      $denominator-suffix: if($numerator == 1, "", "s");

      .#{$scally-type}-#{$class-name}#{nth($mixin-numerators,
        $numerator)}-#{nth($mixin-denominator-words,
          $denominator)#{$denominator-suffix}#{$breakpoint}} {#{$css-property}: percentage($numerator/$denominator);}
    }
  }
}